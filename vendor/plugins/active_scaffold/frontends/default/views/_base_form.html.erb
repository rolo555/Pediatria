<% url_options = params_for(:action => form_action) -%>
<% xhr ||= request.xhr? -%>
<% as_action_config = active_scaffold_config.send(form_action) -%>
<%=
options = {:onsubmit => onsubmit,
           :id => element_form_id(:action => form_action),
           :multipart => as_action_config.multipart?,
           :class => "as_form #{form_action.to_s}",
           :method => method,
           'data-loading' => true}
if xhr && as_action_config.multipart? # file_uploads
  form_remote_upload_tag url_options.merge({:iframe => true}),
                         options.merge({:loading => "$('#{loading_indicator_id(:action => form_action, :id => params[:id])}').style.visibility = 'visible';"})
else
  options[:remote] = true if xhr && !as_action_config.multipart?
  form_tag url_options, options
end -%>

  <h4><%= headline -%></h4>

  <div id="<%= element_messages_id(:action => form_action) %>" class="messages-container">
<% if request.xhr? -%>
    <%= error_messages_for :record, :object_name => @record.class.model_name.human.downcase %>
<% else -%>
    <%= render :partial => 'form_messages' %>
<% end -%>
  </div>

  <%= render :partial => 'form', :locals => { :columns => as_action_config.columns } %>

  <p class="form-footer">
    <%= submit_tag as_(form_action), :class => "submit" %>
    <%= link_to(as_(:cancel), main_path_to_return, :class => 'as_cancel', :remote => true, 'data-refresh' => false) if cancel_link %>
    <%= loading_indicator_tag(:action => form_action, :id => params[:id]) %>
  </p>

</form>
<%= javascript_tag("ActiveScaffold.focus_first_element_of_form('#{element_form_id(:action => form_action)}');") %>
